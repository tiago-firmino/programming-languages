/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LET = 5;
  /** RegularExpression Id. */
  int TRUE = 6;
  /** RegularExpression Id. */
  int FALSE = 7;
  /** RegularExpression Id. */
  int PLUS = 8;
  /** RegularExpression Id. */
  int MINUS = 9;
  /** RegularExpression Id. */
  int STAR = 10;
  /** RegularExpression Id. */
  int DIV = 11;
  /** RegularExpression Id. */
  int LPAR = 12;
  /** RegularExpression Id. */
  int RPAR = 13;
  /** RegularExpression Id. */
  int LBRA = 14;
  /** RegularExpression Id. */
  int RBRA = 15;
  /** RegularExpression Id. */
  int EQUAL = 16;
  /** RegularExpression Id. */
  int COLON = 17;
  /** RegularExpression Id. */
  int SEMIC = 18;
  /** RegularExpression Id. */
  int TERM = 19;
  /** RegularExpression Id. */
  int COMMA = 20;
  /** RegularExpression Id. */
  int AND = 21;
  /** RegularExpression Id. */
  int OR = 22;
  /** RegularExpression Id. */
  int EQ = 23;
  /** RegularExpression Id. */
  int GT = 24;
  /** RegularExpression Id. */
  int LT = 25;
  /** RegularExpression Id. */
  int GTEQ = 26;
  /** RegularExpression Id. */
  int LTEQ = 27;
  /** RegularExpression Id. */
  int DIF = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int ASSIGN = 30;
  /** RegularExpression Id. */
  int BOX = 31;
  /** RegularExpression Id. */
  int MATCH = 32;
  /** RegularExpression Id. */
  int IF = 33;
  /** RegularExpression Id. */
  int ELSE = 34;
  /** RegularExpression Id. */
  int WHILE = 35;
  /** RegularExpression Id. */
  int END = 36;
  /** RegularExpression Id. */
  int PRINT = 37;
  /** RegularExpression Id. */
  int PRINTLN = 38;
  /** RegularExpression Id. */
  int FN = 39;
  /** RegularExpression Id. */
  int ARROW = 40;
  /** RegularExpression Id. */
  int DEREF = 41;
  /** RegularExpression Id. */
  int LIST = 42;
  /** RegularExpression Id. */
  int LAZY = 43;
  /** RegularExpression Id. */
  int String = 44;
  /** RegularExpression Id. */
  int Id = 45;
  /** RegularExpression Id. */
  int Num = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"let\"",
    "\"true\"",
    "\"false\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\":\"",
    "\";\"",
    "\";;\"",
    "\",\"",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"~=\"",
    "\"~\"",
    "\":=\"",
    "\"box\"",
    "\"match\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"end\"",
    "\"print\"",
    "\"println\"",
    "\"fn\"",
    "\"=>\"",
    "\"!\"",
    "\"::\"",
    "\"::?\"",
    "<String>",
    "<Id>",
    "<Num>",
  };

}
